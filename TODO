Turn some methods into package functions.

    [DONE] (*Grid) GetVertexIndexClockwise(int) int -> HexVertexIndexClockwise(int) int
    [DONE] (*Grid) GetVertexIndexCounterClockwise(int) int -> HexVertexIndexCounterClockwise(int) int
    [DONE] (*Grid) VertexIndex(HexDirection) int -> HexVertexDirection(HexDirection) int
    [DONE] (*HexPoints) Edge(HexDirection) []Point -> (*HexPoints) EdgePoints(HexDirection) []Point
    [DONE] (*HexPoints) EdgeDirection(int, int) HexDirection -> HexEdgeDirection(int, int) HexDirection
    [DONE] (*HexPoints) EdgeIndices(HexDirection) (int, int) -> HexEdgeIndices(HexDirection) (int, int)

Rename some methods

    [DONE] (*Grid) GetHexAdjacentCoords(int, int, HexDirection) [][]int -> (*Grid) GetCoordsAdjacent(Coords, HexDirection) []Coords

Make some methods

    [DONE] (*Grid) GetCoordsIncident(vert VertexCoords) []Coords
        Use code from GetHexIncident or whatever it is doing...
    [DONE] (*Grid) GetTilesIncident(vert VertexCoords) []Tile
        Use code from GetHexIncident or whatever it is doing...
    [DONE] (*Grid) GetCoordsSharedByVertices(vert1, vert2 VertexCoords) []Coords
        Return the intersection of two calls to the previous method.
    [DONE] (*Grid) GetTilesSharedByVertices(vert1, vert2 VertexCoords) []*Tile
        Return the tiles shared by two vertex
    [DONE] (*Grid) GetEdges(Coords) []*Edge
        Return all edges of a hex tile (0,1), (1,2), ..., (5,0)
    [DONE] (*Grid) GetEdgesIncident(VertexCoords) []*Edge
        Return a list of edges leaving the given vertex coordinates.
    [DONE] (*Grid) GetEdgesCoordsIncident(VertexCoords) []*Edge
        Return a list of edge coordinates leaving the given vertex coordinates.
    [DONE] (*Grid) GetVertices(Coords) []*Vertices
        Return all vertices of a hex tile 0, 1, ..., 5
